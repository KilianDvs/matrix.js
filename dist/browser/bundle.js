var lib=(()=>{var i=Object.defineProperty;var l=(n,t)=>{for(var a in t)i(n,a,{get:t[a],enumerable:!0})};var u={};l(u,{Matrix:()=>s});"use strict";var s=class{constructor(t,a=!1){this.asColumns=a;this._input=[];t.length!==0&&(a?this.addCols(...t):this.addRows(...t))}get width(){return Math.max(...this.rows.map(t=>t.length))}get height(){return Math.max(...this.cols.map(t=>t.length))}get rows(){return this._input}get cols(){let t=[];for(let a=0;a<this.rows.length;a++)t.push(this.getCol(a));return t}get values(){return this.rows.map(t=>t.map(a=>a.data))}getRow(t){return this._input[t]}getCol(t){return this._input.map(a=>a[t])}forRows(t){return this.rows.forEach(t),this}forCols(t){return this.cols.forEach(t),this}removeRow(t){return t===void 0?this.rows.pop():this.rows.splice(t,1),this}removeCol(t){return this.forRows(a=>{t===void 0?a.pop():a.splice(t,1)}),this}addRow(t,a){let r=t.map(e=>({data:e}));return a===void 0?this._input.push(r):this._input.splice(a,0,r),this}addCol(t,a){let r=t.map(e=>({data:e}));return this._input.forEach((e,o)=>{a===void 0?e.push(r[o]):e.splice(a,0,r[o])}),this}addRows(...t){for(let a of t)this.addRow(a);return this}addCols(...t){for(let a of t)this.addCol(a);return this}clone(){return new s(this.toJSON(),this.asColumns)}toJSON(){return JSON.parse(this.toString())}toString(){return JSON.stringify(this.values)}};return u;})();
