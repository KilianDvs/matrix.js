var lib=(()=>{var i=Object.defineProperty;var u=(n,t)=>{for(var e in t)i(n,e,{get:t[e],enumerable:!0})};var h={};u(h,{Matrix:()=>l});"use strict";var l=class{constructor(t,e=!1){this.asColumns=e;this._input=[];t.length!==0&&(e?this.addCols(t):this.addRows(t))}get width(){return Math.max(...this.rows.map(t=>t.length))}get height(){return Math.max(...this.cols.map(t=>t.length))}get rows(){return this._input}get cols(){let t=[];for(let e=0;e<this.rows.length;e++)t.push(this.getCol(e));return t}get values(){return this.rows.map(t=>t.map(e=>e.data))}getRow(t){return this._input[t]}getCol(t){return this._input.map(e=>e[t])}forRows(t){return this.rows.forEach(t),this}forCols(t){return this.cols.forEach(t),this}removeRow(t){return t===void 0?this.rows.pop():this.rows.splice(t,1),this}removeCol(t){return this.forRows(e=>{t===void 0?e.pop():e.splice(t,1)}),this}addRow(t,e){let a=t.map(o=>({data:o}));return e===void 0?this._input.push(a):this._input.splice(e,0,a),this}addCol(t,e){let a=t.map(o=>({data:o}));return this._input.forEach((o,r)=>{e===void 0?o.push(a[r]):o.splice(e,0,a[r])}),this}addRows(t,e){if(e||e===0)for(let a of t)this.addRow(a,e++);else for(let a of t)this.addRow(a);return this}addCols(t,e){if(e||e===0)for(let a of t)this.addCol(a,e++);else for(let a of t)this.addCol(a);return this}clone(){return new l(this.toJSON(),this.asColumns)}toJSON(){return JSON.parse(this.toString())}toString(){return JSON.stringify(this.values)}forZone(t,e,a){let o=[];for(let r=t[0];r<e[0]+1;r++)for(let s=t[1];s<e[1]+1;s++){if(!this._input[s]||!this._input[s][r])throw new Error(`No cell found at position : ${r} ${s}`);o.push(this._input[s][r])}o.forEach((r,s)=>{a(r,s,o)})}};return h;})();
